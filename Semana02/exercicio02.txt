a) Liste e descreva o que são as 4 etapas do processo de compilação.

Etapas do processo de compilação:
1. Preprocessin é a etapa que cuida das linhas do programa que começam com '#', ou seja, as diretivas #include e #define. A diretiva define define uma abreviatura — conhecida como macro — para um trecho de código.
2. Compilation Proper, nesta etapa é quando o código-fonte é convertido em assembly. Vimos que a saída do pré-processamento era basicamente todos os arquivos de origem concatenados juntos, então o estágio de compilação converte isso em assembly.
3. Assembly, etapa onde o assembly é convertido para linguagem de maquina, então toda aquela linguagem ainda entendivel por humanos se transforma em binarios para a passagem das informações para a maquina.
4. Linking, Aqui temos main.cpp e cube.cpp, teremos que vincular os arquivos de objeto que cada um deles produz. Basicamente, tudo o que foi feito até agora tratou main.cpp e cube.cpp como arquivos separados. Mas para que isso funcione, eles terão que ser combinados em um único binário. Linking faz esse processo.

b) O compilador gcc permite fornecer parâmetros extras, que modificam desde a emissão de 
erros até o binário final, o otimizando para determinados comportamentos. Explique a função 
dos seguintes parâmetros:

i) -static
Vincula bibliotecas estáticas.

ii) -g
Inclui informações de depuração padrão no binário.

iii) -pedantic
Emite todos os avisos exigidos pelo padrão ANSI/ISO C.

iv) -Wall
Emite todos os avisos geralmente úteis que o gcc pode fornecer.
Avisos específicos também podem ser sinalizados usando -W{warning}.

v) -Os
Especifica o nome do arquivo de saída.

vi) -O3
Especifica o nível de otimização "3".